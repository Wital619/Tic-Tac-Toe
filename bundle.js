!function(n){var e={};function t(c){if(e[c])return e[c].exports;var l=e[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)t.d(c,l,function(e){return n[e]}.bind(null,l));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(n,e,t){n.exports=t(2)},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zY3NzL21haW4uc2Nzcz80ZjkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/classes/player.js\nclass Player {\n  constructor (side) {\n    this.side = side;\n    this.score = 0;\n  }\n}\n// CONCATENATED MODULE: ./src/js/utils.js\nfunction hide ($el) {\n  $el.style.display = 'none';\n}\n\nfunction show ($el, value = 'block') {\n  $el.style.display = value;  \n}\n\nfunction replacePlayerSide (side) {\n  return side === 'X' ? 'O' : 'X';\n}\n\nfunction appendFigure (squareId, player) {\n  const $element = createFigure(player);\n  const $square = document.getElementById(`square-${squareId}`);\n\n  $square.appendChild($element);\n}\n\nfunction createFigure (player) {\n  const $el = document.createElement('div');\n  $el.className = player === 'X' ? 'cross-element' : 'circle-element';\n\n  return $el;\n}\n// CONCATENATED MODULE: ./src/js/algorithm.js\nlet humanPlayer = 'X';\nlet botPlayer = 'O';\n\nconst winCombos = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [6, 4, 2]\n];\n\nfunction getWinCombo (index) {\n  if (index < 0 || index > 7) {\n    throw new Error('Index must be from 0 to 7 !');\n  }\n\n  return winCombos[index];  \n}\n\nfunction checkWinner (board, playerSide) {\n  const playerMoves = board.reduce((a, e, i) => {\n    return e === playerSide ? a.concat(i) : a;\n  }, []);\n\n  let gameWon = null;\n\n  for (const [winArrayIndex, winArray] of winCombos.entries()) {\n    if (winArray.every(elem => playerMoves.includes(elem))) {\n      gameWon = { winArrayIndex, playerSide };\n      break;\n    }\n  }\n\n  return gameWon;\n}\n\nfunction getEmptySquares (board) {\n  return board.filter(s => typeof s === 'number');\n}\n\nfunction getBestBotMove (board, player) {\n  if (player === 'O') {\n    humanPlayer = 'X';\n    botPlayer = 'O';\n  } else {\n    humanPlayer = 'O';\n    botPlayer = 'X';\n  }\n\n  return minimax(board, botPlayer).index;\n}\n\nfunction minimax (board, player) {\n  const emptySquares = getEmptySquares(board);\n  const moves = [];\n\n  if (checkWinner(board, humanPlayer)) {\n    return { score: -10 };\n  } else if (checkWinner(board, botPlayer)) {\n    return { score: 10 };\n  } else if (emptySquares.length === 0) {\n    return { score: 0 };\n  }\n\n  for (let i = 0; i < emptySquares.length; i++) {\n    const move = {};\n    let result;\n\n    move.index = board[emptySquares[i]];\n    board[emptySquares[i]] = player;\n\n    if (player === humanPlayer) {\n      result = minimax(board, botPlayer);\n      move.score = result.score;\n    } else {\n      result = minimax(board, humanPlayer);\n      move.score = result.score;\n    }\n\n    board[emptySquares[i]] = move.index;\n\n    moves.push(move);\n  }\n\n  let bestMove;\n  let bestScore;\n\n  if (player === botPlayer) {\n    bestScore = -10000;\n\n    for (let i = 0; i < moves.length; i++) {\n      if (moves[i].score > bestScore) {\n        bestScore = moves[i].score;\n        bestMove = i;\n      }\n    }\n  } else {\n    bestScore = 10000;\n\n    for (let i = 0; i < moves.length; i++) {\n      if (moves[i].score < bestScore) {\n        bestScore = moves[i].score;\n        bestMove = i;\n      }\n    }\n  }\n\n  return moves[bestMove];\n}\n\n// CONCATENATED MODULE: ./src/js/classes/game.js\n\n\n\n\n\nclass game_Game {\n  constructor (humanSide, botSide, selectedGameMode) {\n    this.$board = document.querySelector('.board');\n    this.$squares = document.querySelectorAll('.board__item');\n    this.$pointsValues = document.querySelector('.points__values');\n    this.$winner = document.querySelector('.winner');\n    this.$mainGame = document.querySelector('.main-game');\n\n    this.humanPlayer = new Player(humanSide);\n    this.botPlayer = new Player(botSide);\n    this.tieScore = 0;\n    this.isItChangingMode = selectedGameMode === 'changing';\n\n    this.addElement = this.addElement.bind(this);\n    show(this.$mainGame);\n\n    this.initialize();\n    this.initButtons();\n    this.handleWhenBotMovesFirst();\n  }\n\n  initialize () {\n    this.board = Array.from(Array(9).keys());\n    this.isThereWinner = false;\n\n    this.$board.addEventListener('click', this.addElement);\n  }\n\n  initButtons () {\n    this.$btnLeave = document.querySelector('.btn--leave');\n    this.$btnNew = document.querySelector('.btn--new');\n    this.$btnResign = document.querySelector('.btn--resign');\n    this.$btnReset = document.querySelector('.btn--reset');\n\n    this.$btnResign.disabled = true;\n\n    this.$btnNew.addEventListener('click', () => this.handleNewGame());\n    this.$btnReset.addEventListener('click', () => this.resetGameScore());\n    this.$btnLeave.addEventListener('click', () => location.reload());\n    this.$btnResign.addEventListener('click', \n      () => this.declareWinner({ playerSide: this.botPlayer.side })\n    );\n  }\n\n  handleWhenBotMovesFirst () {\n    if (this.humanPlayer.side === 'O') {\n      const correctFirstMoves = [0, 2, 6, 8];\n      const randomIndex = Math.floor(Math.random() * 4);\n\n      this.makeMove(correctFirstMoves[randomIndex], this.botPlayer.side);\n    }\n  }\n\n  handleNewGame () {\n    if (this.isItChangingMode) {\n      const gameSide = new game_side_GameSide(true);\n      \n      hide(this.$mainGame);\n\n      gameSide.selectSideByPromise()\n        .then(data => {\n          this.humanPlayer.side = data.humanSide;\n          this.botPlayer.side = data.botSide;\n          \n          show(this.$mainGame);\n          this.newGame();\n        });\n    } else {\n      this.newGame();\n    }\n  }\n\n  resetGameScore () {\n    this.humanPlayer.score = 0;\n    this.botPlayer.score = 0;\n    this.tieScore = 0;\n\n    this.$pointsValues.children[0].textContent = 0;\n    this.$pointsValues.children[2].textContent = 0;\n    this.$pointsValues.children[1].textContent = 0;\n\n    this.$btnReset.disabled = true;\n  }\n\n  newGame () {\n    this.initialize();\n    this.resetSquares();\n    this.handleWhenBotMovesFirst();\n\n    this.$btnNew.disabled = true;\n    this.$btnResign.disabled = true;\n    this.$btnReset.disabled = true;\n\n    show(this.$board, 'table');\n    hide(this.$winner);\n  }\n\n  addElement (e) {\n    const squareId = e.target.id.slice(7);\n\n    if (typeof this.board[squareId] === 'number') {\n      this.makeMove(squareId, this.humanPlayer.side);\n      this.checkIfItFirstPlayerMove();\n\n      const botSquareId = getBestBotMove(this.board, this.botPlayer.side);\n      this.makeMove(botSquareId, this.botPlayer.side);\n    }\n  }\n\n  makeMove (squareId, player) {\n    if (!this.isThereWinner) {\n      appendFigure(squareId, player);\n      this.board[squareId] = player;\n\n      this.checkIfThereIsResult(player);\n    }\n  }\n\n  checkIfThereIsResult (player) {\n    const winner = checkWinner(this.board, player);\n    const tie = getEmptySquares(this.board).length === 0;\n\n    switch (winner || tie || true) {\n      case winner: {\n        this.isThereWinner = true;\n        this.declareWinner(winner);\n        break;\n      }\n      case tie: {\n        this.isThereWinner = true;\n        this.declareWinner('');\n        break;\n      }\n    }\n  }\n\n  declareWinner ({playerSide, winArrayIndex}) {\n    this.handleScore(playerSide);\n\n    if (playerSide && typeof winArrayIndex !== 'undefined') {\n      this.fillWonSquares(playerSide, winArrayIndex);\n    }\n\n    this.resetToInitialSettings();\n  }\n\n  resetToInitialSettings () {\n    this.$board.removeEventListener('click', this.addElement);\n\n    this.$btnLeave.disabled = true;\n    this.$btnResign.disabled = true;\n\n    setTimeout(() => {\n      hide(this.$board);\n      show(this.$winner, 'flex');\n\n      this.$btnNew.disabled = false;\n      this.$btnLeave.disabled = false;\n      this.$btnReset.disabled = false;\n    }, 500);\n  }\n\n  handleScore (player) {\n    const $winner = document.querySelector('.winner__result');\n\n    if (player === this.humanPlayer.side) {\n      this.humanPlayer.score++;\n      this.$pointsValues.children[0].textContent = this.humanPlayer.score;\n      $winner.textContent = 'YOU WON !';\n    } else if (player === this.botPlayer.side) {\n      this.botPlayer.score++;\n      this.$pointsValues.children[2].textContent = this.botPlayer.score;\n      $winner.textContent = 'YOU LOSE !';\n    } else {\n      this.tieScore++;\n      this.$pointsValues.children[1].textContent = this.tieScore;\n      $winner.textContent = 'TIE !';\n    }\n  }\n\n  fillWonSquares (player, winArrayIndex) {\n    const wonIndexes = getWinCombo(winArrayIndex);\n\n    this.$squares.forEach($square => {\n      const squareId = parseInt($square.id.slice(7), 10);\n\n      if (wonIndexes.includes(squareId)) {\n        $square.style.backgroundColor = player === this.humanPlayer.side ? 'green' : 'red';\n      }\n    });\n  }\n\n  resetSquares () {\n    this.$squares.forEach($square => {\n      if ($square.firstElementChild) {\n        $square.removeChild($square.firstElementChild);\n        $square.style.removeProperty('background-color');\n      }\n    });\n  }\n\n  checkIfItFirstPlayerMove () {\n    const movesCount = this.board.filter(side => side === this.humanPlayer.side);\n\n    if (movesCount.length === 1) {\n      this.$btnResign.disabled = false;\n      this.$btnLeave.disabled = true;\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/classes/game-mode.js\n\n\nclass game_mode_GameMode {\n  constructor () {\n    this.$modes = document.querySelector('.modes');\n    this.$modesInputs = document.querySelectorAll('.modes__input');\n\n    this.selectGameMode = this.selectGameMode.bind(this);\n    this.initialize();\n\n    this.gameMode = 'same';\n  }\n\n  initialize () {\n    show(this.$modes);\n\n    this.$modesInputs.forEach(input => input.addEventListener('change', this.selectGameMode));\n  }\n\n  selectGameMode (e) {\n    this.gameMode = e.target.value;\n  }\n\n  cleanBeforeDestroy () {\n    hide(this.$modes);\n\n    this.$modesInputs.forEach(input => input.addEventListener('change', this.selectGameMode));\n  }\n\n  getGameMode () {\n    this.cleanBeforeDestroy();\n\n    return this.gameMode;\n  }\n}\n// CONCATENATED MODULE: ./src/js/classes/game-side.js\n\n\n\n\nclass game_side_GameSide {\n  constructor (isItChangingMode = false) {\n    this.$sidesParent = document.querySelector('.sides');\n    this.$sides = document.querySelectorAll('.sides__side');\n    \n    show(this.$sidesParent);\n    \n    if (!isItChangingMode) {\n      this.humanSide = 'X';\n      this.botSide = 'O';\n      this.selectSide = this.selectSide.bind(this);\n      this.gameMode = new game_mode_GameMode();\n      \n      this.$sides.forEach($side => $side.addEventListener('click', this.selectSide));\n    }\n  }\n\n  selectSide (e) {\n    e.stopPropagation();\n\n    const selectedSide = e.currentTarget.getAttribute('data-side');\n    const humanSide = selectedSide;\n    const botSide = selectedSide === 'X' ? 'O' : 'X';\n    const gameMode = this.gameMode.getGameMode();\n\n    new game_Game(humanSide, botSide, gameMode);\n\n    this.cleanBeforeDestroy();\n  }\n\n  selectSideByPromise () {\n    return new Promise(resolve => {\n      this.$sides.forEach($side => {\n        $side.addEventListener('click', e => {\n          const selectedSide = e.currentTarget.getAttribute('data-side');\n          const humanSide = selectedSide;\n          const botSide = selectedSide === 'X' ? 'O' : 'X';\n\n          hide(this.$sidesParent);\n          resolve({ humanSide, botSide });      \n        });\n      });\n    });\n  }\n\n  cleanBeforeDestroy () {\n    hide(this.$sidesParent);\n\n    this.$sides.forEach($side => $side.removeEventListener('click', this.selectSide));\n  }\n}\n// CONCATENATED MODULE: ./src/js/classes/socket-player.js\nclass SocketPlayer {\n  constructor (name, side) {\n    this.name = name;\n    this.opponentName = null;\n    this.side = side;\n    this.currentTurn = true;\n    this.playsArr = 0;\n    this.score = 0;\n  }\n\n  setOpponentName (name) {\n    this.opponentName = name;\n  }\n\n  getOpponentName () {\n    return this.opponentName;\n  }\n\n  setCurrentTurn (turn) {\n    this.currentTurn = turn;\n  }\n\n  getCurrentTurn () {\n    return this.currentTurn;\n  }\n}\n// CONCATENATED MODULE: ./src/js/classes/socket-game.js\n\n\n\nclass socket_game_SocketGame {\n  constructor ({roomId, player, socket, isGameStarted}) {\n    this.$board = document.querySelector('.board');\n    this.$squares = document.querySelectorAll('.board__item');\n    this.$info = document.querySelector('.info');\n    this.$winner = document.querySelector('.winner');\n    this.$mainGame = document.querySelector('.main-game');\n\n    this.roomId = roomId;\n    this.player = player;\n    this.socket = socket;\n    this.isGameStarted = isGameStarted;\n    this.opponentSide = replacePlayerSide(this.player.side);\n\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n\n    show(this.$mainGame);\n    show(this.$info);\n\n    this.initialize();\n    this.initSocketButtons();\n  }\n\n  initialize () {\n    this.board = Array.from(Array(9).keys());\n    this.$board.addEventListener('click', this.handleSquareClick);\n  }\n\n  initSocketButtons () {\n    const $btnNew = document.querySelector('.btn--new');\n    const $btnResign = document.querySelector('.btn--resign');\n    const $btnReset = document.querySelector('.btn--reset');\n    const $btnLeave = document.querySelector('.btn--leave');\n    \n    hide($btnReset);\n    hide($btnResign);\n    hide($btnNew);\n    hide($btnLeave);\n  }\n\n  handleSquareClick (e) {\n    const squareId = e.target.id.slice(7);\n\n    if (!this.player.getCurrentTurn()) {\n      alert('Its not your turn!');\n\n      return;\n    }\n\n    if (!this.isGameStarted) {\n      alert('There is no second player!');\n\n      return;\n    }\n\n    if (typeof this.board[squareId] === 'number') {\n      this.makeMove(squareId, this.player.side);\n      this.setInfoText('Waiting for the opponent');\n      this.player.setCurrentTurn(false);\n\n      this.socket.emit('playTurn', {\n        square: squareId,\n        room: this.roomId\n      });\n    } else {\n      alert('This square has already been played on!');\n    }\n  }\n\n  makeMove (squareId, player) {\n    appendFigure(squareId, player);\n    this.board[squareId] = player;\n    this.checkIfThereIsResult();\n  }\n\n  checkIfThereIsResult () {\n    const winner = checkWinner(this.board, this.player.side);\n    const tie = getEmptySquares(this.board).length === 0;\n\n    switch (winner || tie || true) {\n      case winner: {\n        this.declareWinner('YOU WON !');\n        this.socket.emit('gameEnded', {\n          room: this.roomId,\n          result: 'YOU LOSE !'\n        });     \n        break;\n      }\n      case tie: {\n        this.declareWinner('TIE !');\n        this.socket.emit('gameEnded', {\n          room: this.roomId,\n          result: 'TIE !'\n        });    \n\n        break;\n      }\n    }\n  }\n\n  declareWinner (resultsMessage) {\n    hide(this.$info);\n\n    this.showResultOverTime(resultsMessage);\n\n    return setTimeout(() => {\n      this.socket.disconnect();\n      location.reload();\n    }, 500);\n  }\n\n  emitAnotherPlayer (result) {\n    this.socket.emit('gameEnded', {\n      room: this.roomId,\n      result\n    });\n  }\n\n  showResultOverTime (result) {\n    return setTimeout(() => {\n      const $winnerResult = document.querySelector('.winner__result');\n      $winnerResult.innerText = result; \n\n      hide(this.$board);\n      show(this.$winner, 'flex');\n\n      this.$winner.style.marginBottom = '0';\n    }, 500);\n  }\n\n  setInfoText (text) {\n    this.$info.innerText = text;\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/classes/entry.js\n\n\n\n\n\nclass entry_Entry {\n  constructor () {\n    this.$playWithHumanBtn = document.querySelector('.btn-create');\n    this.$btnJoin = document.querySelector('.btn-join');\n    this.$playWithCompBtn = document.querySelector('.btn-comp');\n    this.$entry = document.querySelector('.entry');\n\n    this.$playWithHumanBtn.disabled = true;\n    this.$btnJoin.disabled = true;\n    \n    this.$firstPlayerName = document.querySelector('.entry__input--first-player');\n    this.$secondPlayerName = document.querySelector('.entry__input--second-player');\n    this.$inputRoomId = document.querySelector('.entry__input--room-id');\n\n    // this.socket = io.connect('http://localhost:5000');\n    this.game = null;\n    this.player = null;\n    this.playerX = 'X';\n    this.playerO = 'O';\n\n    this.initialize();\n    // this.initSocketEvents();\n  }\n\n  initialize () {\n    this.playWithComputer = this.playWithComputer.bind(this);\n    this.playWithHuman = this.playWithHuman.bind(this);\n    this.joinInCreatedGame = this.joinInCreatedGame.bind(this);\n    \n    show(this.$entry);\n\n    this.$playWithCompBtn.addEventListener('click', this.playWithComputer);\n    this.$playWithHumanBtn.addEventListener('click', this.playWithHuman);\n    this.$btnJoin.addEventListener('click', this.joinInCreatedGame);\n  }\n\n  playWithComputer () {\n    hide(this.$entry);\n    this.$playWithCompBtn.removeEventListener('click', this.playWithComputer);\n\n    new game_side_GameSide(false);\n  }\n\n  playWithHuman () {\n    const name = this.$firstPlayerName.value || 'div';\n\n    if (!name) {\n      alert('Please enter your name.');\n\n      return;\n    }\n\n    this.socket.emit('createGame', { name });\n    this.player = new SocketPlayer(name, this.playerX);\n\n    hide(this.$entry);\n  }\n\n  joinInCreatedGame () {\n    const name = this.$secondPlayerName.value || 'ddf';\n    const roomID = this.$inputRoomId.value;\n\n    if (!name || !roomID) {\n      alert('Please enter your name and game ID.');\n    \n      return;\n    }\n\n    this.socket.emit('joinGame', { name, room: roomID });\n\n    this.player = new SocketPlayer(name, this.playerO);\n    hide(this.$entry);\n  }\n\n  initSocketEvents () {\n    this.socket.on('newGame', data => {\n      const infoMessage = `Hello, ${data.name}.\n        Please ask your friend to enter Game ID: ${data.room}.\n        Waiting for player 2...`;\n\n      const params = {\n        roomId: data.room,\n        player: this.player,\n        socket: this.socket,\n        isGameStarted: false\n      };\n\n      this.game = new socket_game_SocketGame(params);\n      this.game.setInfoText(infoMessage);\n    });\n    \n    this.socket.on('player1', () => {\n      this.game.setInfoText('Your turn');\n      this.game.isGameStarted = true;\n      this.player.setCurrentTurn(true);\n    });\n    \n    this.socket.on('player2', data => {\n      const params = {\n        roomId: data.room,\n        player: this.player,\n        socket: this.socket,\n        isGameStarted: true\n      };\n\n      this.game = new socket_game_SocketGame(params);\n\n      this.game.setInfoText('Waiting for the opponent');\n      this.player.setCurrentTurn(false);\n    });\n    \n    this.socket.on('turnPlayed', data => {\n      const opponentSide = replacePlayerSide(this.player.side);\n\n      this.game.makeMove(data.square, opponentSide);\n      this.game.setInfoText('Your turn');\n      this.player.setCurrentTurn(true);\n    });\n    \n    this.socket.on('gameEnd', data => {\n      this.game.declareWinner(data.result);\n    });\n    \n    this.socket.on('err', data => {\n      alert(data.message);\n      show(this.$entry);\n    });\n  }\n}\n// CONCATENATED MODULE: ./src/service-worker/register-service-worker.js\nconst registerServiceWorker = NODE_ENV => {\n  if ('serviceWorker' in navigator) {\n    if (NODE_ENV === 'development') {\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/service-worker.js');\n      });\n    } else {\n      navigator.serviceWorker.register('/tic-tac-toe/service-worker.js');\n    }\n  }\n};\n\n// EXTERNAL MODULE: ./src/scss/main.scss\nvar main = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\nregisterServiceWorker(\"production\");\ndocument.addEventListener('DOMContentLoaded', () => new entry_Entry());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9jbGFzc2VzL3BsYXllci5qcz8xYjAwIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy5qcz85OTQ0Iiwid2VicGFjazovLy8uL3NyYy9qcy9hbGdvcml0aG0uanM/ZDI5NSIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY2xhc3Nlcy9nYW1lLmpzPzBmY2MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NsYXNzZXMvZ2FtZS1tb2RlLmpzPzM0ZDQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NsYXNzZXMvZ2FtZS1zaWRlLmpzPzk2ZDgiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NsYXNzZXMvc29ja2V0LXBsYXllci5qcz8wNmZmIiwid2VicGFjazovLy8uL3NyYy9qcy9jbGFzc2VzL3NvY2tldC1nYW1lLmpzP2I0MjciLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NsYXNzZXMvZW50cnkuanM/NmJhNSIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmljZS13b3JrZXIvcmVnaXN0ZXItc2VydmljZS13b3JrZXIuanM/NDg5MCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz85MjkxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllciB7XG4gIGNvbnN0cnVjdG9yIChzaWRlKSB7XG4gICAgdGhpcy5zaWRlID0gc2lkZTtcbiAgICB0aGlzLnNjb3JlID0gMDtcbiAgfVxufSIsImV4cG9ydCBmdW5jdGlvbiBoaWRlICgkZWwpIHtcbiAgJGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93ICgkZWwsIHZhbHVlID0gJ2Jsb2NrJykge1xuICAkZWwuc3R5bGUuZGlzcGxheSA9IHZhbHVlOyAgXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlUGxheWVyU2lkZSAoc2lkZSkge1xuICByZXR1cm4gc2lkZSA9PT0gJ1gnID8gJ08nIDogJ1gnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kRmlndXJlIChzcXVhcmVJZCwgcGxheWVyKSB7XG4gIGNvbnN0ICRlbGVtZW50ID0gY3JlYXRlRmlndXJlKHBsYXllcik7XG4gIGNvbnN0ICRzcXVhcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc3F1YXJlLSR7c3F1YXJlSWR9YCk7XG5cbiAgJHNxdWFyZS5hcHBlbmRDaGlsZCgkZWxlbWVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaWd1cmUgKHBsYXllcikge1xuICBjb25zdCAkZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgJGVsLmNsYXNzTmFtZSA9IHBsYXllciA9PT0gJ1gnID8gJ2Nyb3NzLWVsZW1lbnQnIDogJ2NpcmNsZS1lbGVtZW50JztcblxuICByZXR1cm4gJGVsO1xufSIsImxldCBodW1hblBsYXllciA9ICdYJztcbmxldCBib3RQbGF5ZXIgPSAnTyc7XG5cbmNvbnN0IHdpbkNvbWJvcyA9IFtcbiAgWzAsIDEsIDJdLFxuICBbMywgNCwgNV0sXG4gIFs2LCA3LCA4XSxcbiAgWzAsIDMsIDZdLFxuICBbMSwgNCwgN10sXG4gIFsyLCA1LCA4XSxcbiAgWzAsIDQsIDhdLFxuICBbNiwgNCwgMl1cbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXaW5Db21ibyAoaW5kZXgpIHtcbiAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+IDcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0luZGV4IG11c3QgYmUgZnJvbSAwIHRvIDcgIScpO1xuICB9XG5cbiAgcmV0dXJuIHdpbkNvbWJvc1tpbmRleF07ICBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrV2lubmVyIChib2FyZCwgcGxheWVyU2lkZSkge1xuICBjb25zdCBwbGF5ZXJNb3ZlcyA9IGJvYXJkLnJlZHVjZSgoYSwgZSwgaSkgPT4ge1xuICAgIHJldHVybiBlID09PSBwbGF5ZXJTaWRlID8gYS5jb25jYXQoaSkgOiBhO1xuICB9LCBbXSk7XG5cbiAgbGV0IGdhbWVXb24gPSBudWxsO1xuXG4gIGZvciAoY29uc3QgW3dpbkFycmF5SW5kZXgsIHdpbkFycmF5XSBvZiB3aW5Db21ib3MuZW50cmllcygpKSB7XG4gICAgaWYgKHdpbkFycmF5LmV2ZXJ5KGVsZW0gPT4gcGxheWVyTW92ZXMuaW5jbHVkZXMoZWxlbSkpKSB7XG4gICAgICBnYW1lV29uID0geyB3aW5BcnJheUluZGV4LCBwbGF5ZXJTaWRlIH07XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZ2FtZVdvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEVtcHR5U3F1YXJlcyAoYm9hcmQpIHtcbiAgcmV0dXJuIGJvYXJkLmZpbHRlcihzID0+IHR5cGVvZiBzID09PSAnbnVtYmVyJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCZXN0Qm90TW92ZSAoYm9hcmQsIHBsYXllcikge1xuICBpZiAocGxheWVyID09PSAnTycpIHtcbiAgICBodW1hblBsYXllciA9ICdYJztcbiAgICBib3RQbGF5ZXIgPSAnTyc7XG4gIH0gZWxzZSB7XG4gICAgaHVtYW5QbGF5ZXIgPSAnTyc7XG4gICAgYm90UGxheWVyID0gJ1gnO1xuICB9XG5cbiAgcmV0dXJuIG1pbmltYXgoYm9hcmQsIGJvdFBsYXllcikuaW5kZXg7XG59XG5cbmZ1bmN0aW9uIG1pbmltYXggKGJvYXJkLCBwbGF5ZXIpIHtcbiAgY29uc3QgZW1wdHlTcXVhcmVzID0gZ2V0RW1wdHlTcXVhcmVzKGJvYXJkKTtcbiAgY29uc3QgbW92ZXMgPSBbXTtcblxuICBpZiAoY2hlY2tXaW5uZXIoYm9hcmQsIGh1bWFuUGxheWVyKSkge1xuICAgIHJldHVybiB7IHNjb3JlOiAtMTAgfTtcbiAgfSBlbHNlIGlmIChjaGVja1dpbm5lcihib2FyZCwgYm90UGxheWVyKSkge1xuICAgIHJldHVybiB7IHNjb3JlOiAxMCB9O1xuICB9IGVsc2UgaWYgKGVtcHR5U3F1YXJlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4geyBzY29yZTogMCB9O1xuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbXB0eVNxdWFyZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBtb3ZlID0ge307XG4gICAgbGV0IHJlc3VsdDtcblxuICAgIG1vdmUuaW5kZXggPSBib2FyZFtlbXB0eVNxdWFyZXNbaV1dO1xuICAgIGJvYXJkW2VtcHR5U3F1YXJlc1tpXV0gPSBwbGF5ZXI7XG5cbiAgICBpZiAocGxheWVyID09PSBodW1hblBsYXllcikge1xuICAgICAgcmVzdWx0ID0gbWluaW1heChib2FyZCwgYm90UGxheWVyKTtcbiAgICAgIG1vdmUuc2NvcmUgPSByZXN1bHQuc2NvcmU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCA9IG1pbmltYXgoYm9hcmQsIGh1bWFuUGxheWVyKTtcbiAgICAgIG1vdmUuc2NvcmUgPSByZXN1bHQuc2NvcmU7XG4gICAgfVxuXG4gICAgYm9hcmRbZW1wdHlTcXVhcmVzW2ldXSA9IG1vdmUuaW5kZXg7XG5cbiAgICBtb3Zlcy5wdXNoKG1vdmUpO1xuICB9XG5cbiAgbGV0IGJlc3RNb3ZlO1xuICBsZXQgYmVzdFNjb3JlO1xuXG4gIGlmIChwbGF5ZXIgPT09IGJvdFBsYXllcikge1xuICAgIGJlc3RTY29yZSA9IC0xMDAwMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbW92ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChtb3Zlc1tpXS5zY29yZSA+IGJlc3RTY29yZSkge1xuICAgICAgICBiZXN0U2NvcmUgPSBtb3Zlc1tpXS5zY29yZTtcbiAgICAgICAgYmVzdE1vdmUgPSBpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBiZXN0U2NvcmUgPSAxMDAwMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbW92ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChtb3Zlc1tpXS5zY29yZSA8IGJlc3RTY29yZSkge1xuICAgICAgICBiZXN0U2NvcmUgPSBtb3Zlc1tpXS5zY29yZTtcbiAgICAgICAgYmVzdE1vdmUgPSBpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtb3Zlc1tiZXN0TW92ZV07XG59XG4iLCJpbXBvcnQgUGxheWVyIGZyb20gJy4vcGxheWVyJztcbmltcG9ydCBHYW1lU2lkZSBmcm9tICcuL2dhbWUtc2lkZSc7XG5pbXBvcnQge2FwcGVuZEZpZ3VyZSwgaGlkZSwgc2hvd30gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHtnZXRFbXB0eVNxdWFyZXMsIGNoZWNrV2lubmVyLCBnZXRCZXN0Qm90TW92ZSwgZ2V0V2luQ29tYm99IGZyb20gJy4uL2FsZ29yaXRobSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICBjb25zdHJ1Y3RvciAoaHVtYW5TaWRlLCBib3RTaWRlLCBzZWxlY3RlZEdhbWVNb2RlKSB7XG4gICAgdGhpcy4kYm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYm9hcmQnKTtcbiAgICB0aGlzLiRzcXVhcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJvYXJkX19pdGVtJyk7XG4gICAgdGhpcy4kcG9pbnRzVmFsdWVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvaW50c19fdmFsdWVzJyk7XG4gICAgdGhpcy4kd2lubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndpbm5lcicpO1xuICAgIHRoaXMuJG1haW5HYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tZ2FtZScpO1xuXG4gICAgdGhpcy5odW1hblBsYXllciA9IG5ldyBQbGF5ZXIoaHVtYW5TaWRlKTtcbiAgICB0aGlzLmJvdFBsYXllciA9IG5ldyBQbGF5ZXIoYm90U2lkZSk7XG4gICAgdGhpcy50aWVTY29yZSA9IDA7XG4gICAgdGhpcy5pc0l0Q2hhbmdpbmdNb2RlID0gc2VsZWN0ZWRHYW1lTW9kZSA9PT0gJ2NoYW5naW5nJztcblxuICAgIHRoaXMuYWRkRWxlbWVudCA9IHRoaXMuYWRkRWxlbWVudC5iaW5kKHRoaXMpO1xuICAgIHNob3codGhpcy4kbWFpbkdhbWUpO1xuXG4gICAgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgdGhpcy5pbml0QnV0dG9ucygpO1xuICAgIHRoaXMuaGFuZGxlV2hlbkJvdE1vdmVzRmlyc3QoKTtcbiAgfVxuXG4gIGluaXRpYWxpemUgKCkge1xuICAgIHRoaXMuYm9hcmQgPSBBcnJheS5mcm9tKEFycmF5KDkpLmtleXMoKSk7XG4gICAgdGhpcy5pc1RoZXJlV2lubmVyID0gZmFsc2U7XG5cbiAgICB0aGlzLiRib2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuYWRkRWxlbWVudCk7XG4gIH1cblxuICBpbml0QnV0dG9ucyAoKSB7XG4gICAgdGhpcy4kYnRuTGVhdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLS1sZWF2ZScpO1xuICAgIHRoaXMuJGJ0bk5ldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4tLW5ldycpO1xuICAgIHRoaXMuJGJ0blJlc2lnbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4tLXJlc2lnbicpO1xuICAgIHRoaXMuJGJ0blJlc2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi0tcmVzZXQnKTtcblxuICAgIHRoaXMuJGJ0blJlc2lnbi5kaXNhYmxlZCA9IHRydWU7XG5cbiAgICB0aGlzLiRidG5OZXcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZU5ld0dhbWUoKSk7XG4gICAgdGhpcy4kYnRuUmVzZXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLnJlc2V0R2FtZVNjb3JlKCkpO1xuICAgIHRoaXMuJGJ0bkxlYXZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gbG9jYXRpb24ucmVsb2FkKCkpO1xuICAgIHRoaXMuJGJ0blJlc2lnbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIFxuICAgICAgKCkgPT4gdGhpcy5kZWNsYXJlV2lubmVyKHsgcGxheWVyU2lkZTogdGhpcy5ib3RQbGF5ZXIuc2lkZSB9KVxuICAgICk7XG4gIH1cblxuICBoYW5kbGVXaGVuQm90TW92ZXNGaXJzdCAoKSB7XG4gICAgaWYgKHRoaXMuaHVtYW5QbGF5ZXIuc2lkZSA9PT0gJ08nKSB7XG4gICAgICBjb25zdCBjb3JyZWN0Rmlyc3RNb3ZlcyA9IFswLCAyLCA2LCA4XTtcbiAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNCk7XG5cbiAgICAgIHRoaXMubWFrZU1vdmUoY29ycmVjdEZpcnN0TW92ZXNbcmFuZG9tSW5kZXhdLCB0aGlzLmJvdFBsYXllci5zaWRlKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVOZXdHYW1lICgpIHtcbiAgICBpZiAodGhpcy5pc0l0Q2hhbmdpbmdNb2RlKSB7XG4gICAgICBjb25zdCBnYW1lU2lkZSA9IG5ldyBHYW1lU2lkZSh0cnVlKTtcbiAgICAgIFxuICAgICAgaGlkZSh0aGlzLiRtYWluR2FtZSk7XG5cbiAgICAgIGdhbWVTaWRlLnNlbGVjdFNpZGVCeVByb21pc2UoKVxuICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICB0aGlzLmh1bWFuUGxheWVyLnNpZGUgPSBkYXRhLmh1bWFuU2lkZTtcbiAgICAgICAgICB0aGlzLmJvdFBsYXllci5zaWRlID0gZGF0YS5ib3RTaWRlO1xuICAgICAgICAgIFxuICAgICAgICAgIHNob3codGhpcy4kbWFpbkdhbWUpO1xuICAgICAgICAgIHRoaXMubmV3R2FtZSgpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5uZXdHYW1lKCk7XG4gICAgfVxuICB9XG5cbiAgcmVzZXRHYW1lU2NvcmUgKCkge1xuICAgIHRoaXMuaHVtYW5QbGF5ZXIuc2NvcmUgPSAwO1xuICAgIHRoaXMuYm90UGxheWVyLnNjb3JlID0gMDtcbiAgICB0aGlzLnRpZVNjb3JlID0gMDtcblxuICAgIHRoaXMuJHBvaW50c1ZhbHVlcy5jaGlsZHJlblswXS50ZXh0Q29udGVudCA9IDA7XG4gICAgdGhpcy4kcG9pbnRzVmFsdWVzLmNoaWxkcmVuWzJdLnRleHRDb250ZW50ID0gMDtcbiAgICB0aGlzLiRwb2ludHNWYWx1ZXMuY2hpbGRyZW5bMV0udGV4dENvbnRlbnQgPSAwO1xuXG4gICAgdGhpcy4kYnRuUmVzZXQuZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgbmV3R2FtZSAoKSB7XG4gICAgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgdGhpcy5yZXNldFNxdWFyZXMoKTtcbiAgICB0aGlzLmhhbmRsZVdoZW5Cb3RNb3Zlc0ZpcnN0KCk7XG5cbiAgICB0aGlzLiRidG5OZXcuZGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuJGJ0blJlc2lnbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgdGhpcy4kYnRuUmVzZXQuZGlzYWJsZWQgPSB0cnVlO1xuXG4gICAgc2hvdyh0aGlzLiRib2FyZCwgJ3RhYmxlJyk7XG4gICAgaGlkZSh0aGlzLiR3aW5uZXIpO1xuICB9XG5cbiAgYWRkRWxlbWVudCAoZSkge1xuICAgIGNvbnN0IHNxdWFyZUlkID0gZS50YXJnZXQuaWQuc2xpY2UoNyk7XG5cbiAgICBpZiAodHlwZW9mIHRoaXMuYm9hcmRbc3F1YXJlSWRdID09PSAnbnVtYmVyJykge1xuICAgICAgdGhpcy5tYWtlTW92ZShzcXVhcmVJZCwgdGhpcy5odW1hblBsYXllci5zaWRlKTtcbiAgICAgIHRoaXMuY2hlY2tJZkl0Rmlyc3RQbGF5ZXJNb3ZlKCk7XG5cbiAgICAgIGNvbnN0IGJvdFNxdWFyZUlkID0gZ2V0QmVzdEJvdE1vdmUodGhpcy5ib2FyZCwgdGhpcy5ib3RQbGF5ZXIuc2lkZSk7XG4gICAgICB0aGlzLm1ha2VNb3ZlKGJvdFNxdWFyZUlkLCB0aGlzLmJvdFBsYXllci5zaWRlKTtcbiAgICB9XG4gIH1cblxuICBtYWtlTW92ZSAoc3F1YXJlSWQsIHBsYXllcikge1xuICAgIGlmICghdGhpcy5pc1RoZXJlV2lubmVyKSB7XG4gICAgICBhcHBlbmRGaWd1cmUoc3F1YXJlSWQsIHBsYXllcik7XG4gICAgICB0aGlzLmJvYXJkW3NxdWFyZUlkXSA9IHBsYXllcjtcblxuICAgICAgdGhpcy5jaGVja0lmVGhlcmVJc1Jlc3VsdChwbGF5ZXIpO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrSWZUaGVyZUlzUmVzdWx0IChwbGF5ZXIpIHtcbiAgICBjb25zdCB3aW5uZXIgPSBjaGVja1dpbm5lcih0aGlzLmJvYXJkLCBwbGF5ZXIpO1xuICAgIGNvbnN0IHRpZSA9IGdldEVtcHR5U3F1YXJlcyh0aGlzLmJvYXJkKS5sZW5ndGggPT09IDA7XG5cbiAgICBzd2l0Y2ggKHdpbm5lciB8fCB0aWUgfHwgdHJ1ZSkge1xuICAgICAgY2FzZSB3aW5uZXI6IHtcbiAgICAgICAgdGhpcy5pc1RoZXJlV2lubmVyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kZWNsYXJlV2lubmVyKHdpbm5lcik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSB0aWU6IHtcbiAgICAgICAgdGhpcy5pc1RoZXJlV2lubmVyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kZWNsYXJlV2lubmVyKCcnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZGVjbGFyZVdpbm5lciAoe3BsYXllclNpZGUsIHdpbkFycmF5SW5kZXh9KSB7XG4gICAgdGhpcy5oYW5kbGVTY29yZShwbGF5ZXJTaWRlKTtcblxuICAgIGlmIChwbGF5ZXJTaWRlICYmIHR5cGVvZiB3aW5BcnJheUluZGV4ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5maWxsV29uU3F1YXJlcyhwbGF5ZXJTaWRlLCB3aW5BcnJheUluZGV4KTtcbiAgICB9XG5cbiAgICB0aGlzLnJlc2V0VG9Jbml0aWFsU2V0dGluZ3MoKTtcbiAgfVxuXG4gIHJlc2V0VG9Jbml0aWFsU2V0dGluZ3MgKCkge1xuICAgIHRoaXMuJGJvYXJkLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5hZGRFbGVtZW50KTtcblxuICAgIHRoaXMuJGJ0bkxlYXZlLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB0aGlzLiRidG5SZXNpZ24uZGlzYWJsZWQgPSB0cnVlO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBoaWRlKHRoaXMuJGJvYXJkKTtcbiAgICAgIHNob3codGhpcy4kd2lubmVyLCAnZmxleCcpO1xuXG4gICAgICB0aGlzLiRidG5OZXcuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGJ0bkxlYXZlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICB0aGlzLiRidG5SZXNldC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH0sIDUwMCk7XG4gIH1cblxuICBoYW5kbGVTY29yZSAocGxheWVyKSB7XG4gICAgY29uc3QgJHdpbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW5uZXJfX3Jlc3VsdCcpO1xuXG4gICAgaWYgKHBsYXllciA9PT0gdGhpcy5odW1hblBsYXllci5zaWRlKSB7XG4gICAgICB0aGlzLmh1bWFuUGxheWVyLnNjb3JlKys7XG4gICAgICB0aGlzLiRwb2ludHNWYWx1ZXMuY2hpbGRyZW5bMF0udGV4dENvbnRlbnQgPSB0aGlzLmh1bWFuUGxheWVyLnNjb3JlO1xuICAgICAgJHdpbm5lci50ZXh0Q29udGVudCA9ICdZT1UgV09OICEnO1xuICAgIH0gZWxzZSBpZiAocGxheWVyID09PSB0aGlzLmJvdFBsYXllci5zaWRlKSB7XG4gICAgICB0aGlzLmJvdFBsYXllci5zY29yZSsrO1xuICAgICAgdGhpcy4kcG9pbnRzVmFsdWVzLmNoaWxkcmVuWzJdLnRleHRDb250ZW50ID0gdGhpcy5ib3RQbGF5ZXIuc2NvcmU7XG4gICAgICAkd2lubmVyLnRleHRDb250ZW50ID0gJ1lPVSBMT1NFICEnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRpZVNjb3JlKys7XG4gICAgICB0aGlzLiRwb2ludHNWYWx1ZXMuY2hpbGRyZW5bMV0udGV4dENvbnRlbnQgPSB0aGlzLnRpZVNjb3JlO1xuICAgICAgJHdpbm5lci50ZXh0Q29udGVudCA9ICdUSUUgISc7XG4gICAgfVxuICB9XG5cbiAgZmlsbFdvblNxdWFyZXMgKHBsYXllciwgd2luQXJyYXlJbmRleCkge1xuICAgIGNvbnN0IHdvbkluZGV4ZXMgPSBnZXRXaW5Db21ibyh3aW5BcnJheUluZGV4KTtcblxuICAgIHRoaXMuJHNxdWFyZXMuZm9yRWFjaCgkc3F1YXJlID0+IHtcbiAgICAgIGNvbnN0IHNxdWFyZUlkID0gcGFyc2VJbnQoJHNxdWFyZS5pZC5zbGljZSg3KSwgMTApO1xuXG4gICAgICBpZiAod29uSW5kZXhlcy5pbmNsdWRlcyhzcXVhcmVJZCkpIHtcbiAgICAgICAgJHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBwbGF5ZXIgPT09IHRoaXMuaHVtYW5QbGF5ZXIuc2lkZSA/ICdncmVlbicgOiAncmVkJztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJlc2V0U3F1YXJlcyAoKSB7XG4gICAgdGhpcy4kc3F1YXJlcy5mb3JFYWNoKCRzcXVhcmUgPT4ge1xuICAgICAgaWYgKCRzcXVhcmUuZmlyc3RFbGVtZW50Q2hpbGQpIHtcbiAgICAgICAgJHNxdWFyZS5yZW1vdmVDaGlsZCgkc3F1YXJlLmZpcnN0RWxlbWVudENoaWxkKTtcbiAgICAgICAgJHNxdWFyZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnYmFja2dyb3VuZC1jb2xvcicpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY2hlY2tJZkl0Rmlyc3RQbGF5ZXJNb3ZlICgpIHtcbiAgICBjb25zdCBtb3Zlc0NvdW50ID0gdGhpcy5ib2FyZC5maWx0ZXIoc2lkZSA9PiBzaWRlID09PSB0aGlzLmh1bWFuUGxheWVyLnNpZGUpO1xuXG4gICAgaWYgKG1vdmVzQ291bnQubGVuZ3RoID09PSAxKSB7XG4gICAgICB0aGlzLiRidG5SZXNpZ24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGJ0bkxlYXZlLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCB7aGlkZSwgc2hvd30gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lTW9kZSB7XG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLiRtb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RlcycpO1xuICAgIHRoaXMuJG1vZGVzSW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1vZGVzX19pbnB1dCcpO1xuXG4gICAgdGhpcy5zZWxlY3RHYW1lTW9kZSA9IHRoaXMuc2VsZWN0R2FtZU1vZGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLmluaXRpYWxpemUoKTtcblxuICAgIHRoaXMuZ2FtZU1vZGUgPSAnc2FtZSc7XG4gIH1cblxuICBpbml0aWFsaXplICgpIHtcbiAgICBzaG93KHRoaXMuJG1vZGVzKTtcblxuICAgIHRoaXMuJG1vZGVzSW5wdXRzLmZvckVhY2goaW5wdXQgPT4gaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5zZWxlY3RHYW1lTW9kZSkpO1xuICB9XG5cbiAgc2VsZWN0R2FtZU1vZGUgKGUpIHtcbiAgICB0aGlzLmdhbWVNb2RlID0gZS50YXJnZXQudmFsdWU7XG4gIH1cblxuICBjbGVhbkJlZm9yZURlc3Ryb3kgKCkge1xuICAgIGhpZGUodGhpcy4kbW9kZXMpO1xuXG4gICAgdGhpcy4kbW9kZXNJbnB1dHMuZm9yRWFjaChpbnB1dCA9PiBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLnNlbGVjdEdhbWVNb2RlKSk7XG4gIH1cblxuICBnZXRHYW1lTW9kZSAoKSB7XG4gICAgdGhpcy5jbGVhbkJlZm9yZURlc3Ryb3koKTtcblxuICAgIHJldHVybiB0aGlzLmdhbWVNb2RlO1xuICB9XG59IiwiaW1wb3J0IEdhbWUgZnJvbSAnLi9nYW1lJztcbmltcG9ydCBHYW1lTW9kZSBmcm9tICcuL2dhbWUtbW9kZSc7XG5pbXBvcnQge2hpZGUsIHNob3d9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVNpZGUge1xuICBjb25zdHJ1Y3RvciAoaXNJdENoYW5naW5nTW9kZSA9IGZhbHNlKSB7XG4gICAgdGhpcy4kc2lkZXNQYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZXMnKTtcbiAgICB0aGlzLiRzaWRlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaWRlc19fc2lkZScpO1xuICAgIFxuICAgIHNob3codGhpcy4kc2lkZXNQYXJlbnQpO1xuICAgIFxuICAgIGlmICghaXNJdENoYW5naW5nTW9kZSkge1xuICAgICAgdGhpcy5odW1hblNpZGUgPSAnWCc7XG4gICAgICB0aGlzLmJvdFNpZGUgPSAnTyc7XG4gICAgICB0aGlzLnNlbGVjdFNpZGUgPSB0aGlzLnNlbGVjdFNpZGUuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuZ2FtZU1vZGUgPSBuZXcgR2FtZU1vZGUoKTtcbiAgICAgIFxuICAgICAgdGhpcy4kc2lkZXMuZm9yRWFjaCgkc2lkZSA9PiAkc2lkZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuc2VsZWN0U2lkZSkpO1xuICAgIH1cbiAgfVxuXG4gIHNlbGVjdFNpZGUgKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgY29uc3Qgc2VsZWN0ZWRTaWRlID0gZS5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1zaWRlJyk7XG4gICAgY29uc3QgaHVtYW5TaWRlID0gc2VsZWN0ZWRTaWRlO1xuICAgIGNvbnN0IGJvdFNpZGUgPSBzZWxlY3RlZFNpZGUgPT09ICdYJyA/ICdPJyA6ICdYJztcbiAgICBjb25zdCBnYW1lTW9kZSA9IHRoaXMuZ2FtZU1vZGUuZ2V0R2FtZU1vZGUoKTtcblxuICAgIG5ldyBHYW1lKGh1bWFuU2lkZSwgYm90U2lkZSwgZ2FtZU1vZGUpO1xuXG4gICAgdGhpcy5jbGVhbkJlZm9yZURlc3Ryb3koKTtcbiAgfVxuXG4gIHNlbGVjdFNpZGVCeVByb21pc2UgKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIHRoaXMuJHNpZGVzLmZvckVhY2goJHNpZGUgPT4ge1xuICAgICAgICAkc2lkZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkU2lkZSA9IGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc2lkZScpO1xuICAgICAgICAgIGNvbnN0IGh1bWFuU2lkZSA9IHNlbGVjdGVkU2lkZTtcbiAgICAgICAgICBjb25zdCBib3RTaWRlID0gc2VsZWN0ZWRTaWRlID09PSAnWCcgPyAnTycgOiAnWCc7XG5cbiAgICAgICAgICBoaWRlKHRoaXMuJHNpZGVzUGFyZW50KTtcbiAgICAgICAgICByZXNvbHZlKHsgaHVtYW5TaWRlLCBib3RTaWRlIH0pOyAgICAgIFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY2xlYW5CZWZvcmVEZXN0cm95ICgpIHtcbiAgICBoaWRlKHRoaXMuJHNpZGVzUGFyZW50KTtcblxuICAgIHRoaXMuJHNpZGVzLmZvckVhY2goJHNpZGUgPT4gJHNpZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnNlbGVjdFNpZGUpKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvY2tldFBsYXllciB7XG4gIGNvbnN0cnVjdG9yIChuYW1lLCBzaWRlKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLm9wcG9uZW50TmFtZSA9IG51bGw7XG4gICAgdGhpcy5zaWRlID0gc2lkZTtcbiAgICB0aGlzLmN1cnJlbnRUdXJuID0gdHJ1ZTtcbiAgICB0aGlzLnBsYXlzQXJyID0gMDtcbiAgICB0aGlzLnNjb3JlID0gMDtcbiAgfVxuXG4gIHNldE9wcG9uZW50TmFtZSAobmFtZSkge1xuICAgIHRoaXMub3Bwb25lbnROYW1lID0gbmFtZTtcbiAgfVxuXG4gIGdldE9wcG9uZW50TmFtZSAoKSB7XG4gICAgcmV0dXJuIHRoaXMub3Bwb25lbnROYW1lO1xuICB9XG5cbiAgc2V0Q3VycmVudFR1cm4gKHR1cm4pIHtcbiAgICB0aGlzLmN1cnJlbnRUdXJuID0gdHVybjtcbiAgfVxuXG4gIGdldEN1cnJlbnRUdXJuICgpIHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50VHVybjtcbiAgfVxufSIsImltcG9ydCB7YXBwZW5kRmlndXJlLCBoaWRlLCBzaG93LCByZXBsYWNlUGxheWVyU2lkZX0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHtnZXRFbXB0eVNxdWFyZXMsIGNoZWNrV2lubmVyfSBmcm9tICcuLi9hbGdvcml0aG0nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTb2NrZXRHYW1lIHtcbiAgY29uc3RydWN0b3IgKHtyb29tSWQsIHBsYXllciwgc29ja2V0LCBpc0dhbWVTdGFydGVkfSkge1xuICAgIHRoaXMuJGJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJvYXJkJyk7XG4gICAgdGhpcy4kc3F1YXJlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ib2FyZF9faXRlbScpO1xuICAgIHRoaXMuJGluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5mbycpO1xuICAgIHRoaXMuJHdpbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW5uZXInKTtcbiAgICB0aGlzLiRtYWluR2FtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLWdhbWUnKTtcblxuICAgIHRoaXMucm9vbUlkID0gcm9vbUlkO1xuICAgIHRoaXMucGxheWVyID0gcGxheWVyO1xuICAgIHRoaXMuc29ja2V0ID0gc29ja2V0O1xuICAgIHRoaXMuaXNHYW1lU3RhcnRlZCA9IGlzR2FtZVN0YXJ0ZWQ7XG4gICAgdGhpcy5vcHBvbmVudFNpZGUgPSByZXBsYWNlUGxheWVyU2lkZSh0aGlzLnBsYXllci5zaWRlKTtcblxuICAgIHRoaXMuaGFuZGxlU3F1YXJlQ2xpY2sgPSB0aGlzLmhhbmRsZVNxdWFyZUNsaWNrLmJpbmQodGhpcyk7XG5cbiAgICBzaG93KHRoaXMuJG1haW5HYW1lKTtcbiAgICBzaG93KHRoaXMuJGluZm8pO1xuXG4gICAgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgdGhpcy5pbml0U29ja2V0QnV0dG9ucygpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZSAoKSB7XG4gICAgdGhpcy5ib2FyZCA9IEFycmF5LmZyb20oQXJyYXkoOSkua2V5cygpKTtcbiAgICB0aGlzLiRib2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlU3F1YXJlQ2xpY2spO1xuICB9XG5cbiAgaW5pdFNvY2tldEJ1dHRvbnMgKCkge1xuICAgIGNvbnN0ICRidG5OZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLS1uZXcnKTtcbiAgICBjb25zdCAkYnRuUmVzaWduID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi0tcmVzaWduJyk7XG4gICAgY29uc3QgJGJ0blJlc2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi0tcmVzZXQnKTtcbiAgICBjb25zdCAkYnRuTGVhdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLS1sZWF2ZScpO1xuICAgIFxuICAgIGhpZGUoJGJ0blJlc2V0KTtcbiAgICBoaWRlKCRidG5SZXNpZ24pO1xuICAgIGhpZGUoJGJ0bk5ldyk7XG4gICAgaGlkZSgkYnRuTGVhdmUpO1xuICB9XG5cbiAgaGFuZGxlU3F1YXJlQ2xpY2sgKGUpIHtcbiAgICBjb25zdCBzcXVhcmVJZCA9IGUudGFyZ2V0LmlkLnNsaWNlKDcpO1xuXG4gICAgaWYgKCF0aGlzLnBsYXllci5nZXRDdXJyZW50VHVybigpKSB7XG4gICAgICBhbGVydCgnSXRzIG5vdCB5b3VyIHR1cm4hJyk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuaXNHYW1lU3RhcnRlZCkge1xuICAgICAgYWxlcnQoJ1RoZXJlIGlzIG5vIHNlY29uZCBwbGF5ZXIhJyk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHRoaXMuYm9hcmRbc3F1YXJlSWRdID09PSAnbnVtYmVyJykge1xuICAgICAgdGhpcy5tYWtlTW92ZShzcXVhcmVJZCwgdGhpcy5wbGF5ZXIuc2lkZSk7XG4gICAgICB0aGlzLnNldEluZm9UZXh0KCdXYWl0aW5nIGZvciB0aGUgb3Bwb25lbnQnKTtcbiAgICAgIHRoaXMucGxheWVyLnNldEN1cnJlbnRUdXJuKGZhbHNlKTtcblxuICAgICAgdGhpcy5zb2NrZXQuZW1pdCgncGxheVR1cm4nLCB7XG4gICAgICAgIHNxdWFyZTogc3F1YXJlSWQsXG4gICAgICAgIHJvb206IHRoaXMucm9vbUlkXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWxlcnQoJ1RoaXMgc3F1YXJlIGhhcyBhbHJlYWR5IGJlZW4gcGxheWVkIG9uIScpO1xuICAgIH1cbiAgfVxuXG4gIG1ha2VNb3ZlIChzcXVhcmVJZCwgcGxheWVyKSB7XG4gICAgYXBwZW5kRmlndXJlKHNxdWFyZUlkLCBwbGF5ZXIpO1xuICAgIHRoaXMuYm9hcmRbc3F1YXJlSWRdID0gcGxheWVyO1xuICAgIHRoaXMuY2hlY2tJZlRoZXJlSXNSZXN1bHQoKTtcbiAgfVxuXG4gIGNoZWNrSWZUaGVyZUlzUmVzdWx0ICgpIHtcbiAgICBjb25zdCB3aW5uZXIgPSBjaGVja1dpbm5lcih0aGlzLmJvYXJkLCB0aGlzLnBsYXllci5zaWRlKTtcbiAgICBjb25zdCB0aWUgPSBnZXRFbXB0eVNxdWFyZXModGhpcy5ib2FyZCkubGVuZ3RoID09PSAwO1xuXG4gICAgc3dpdGNoICh3aW5uZXIgfHwgdGllIHx8IHRydWUpIHtcbiAgICAgIGNhc2Ugd2lubmVyOiB7XG4gICAgICAgIHRoaXMuZGVjbGFyZVdpbm5lcignWU9VIFdPTiAhJyk7XG4gICAgICAgIHRoaXMuc29ja2V0LmVtaXQoJ2dhbWVFbmRlZCcsIHtcbiAgICAgICAgICByb29tOiB0aGlzLnJvb21JZCxcbiAgICAgICAgICByZXN1bHQ6ICdZT1UgTE9TRSAhJ1xuICAgICAgICB9KTsgICAgIFxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgdGllOiB7XG4gICAgICAgIHRoaXMuZGVjbGFyZVdpbm5lcignVElFICEnKTtcbiAgICAgICAgdGhpcy5zb2NrZXQuZW1pdCgnZ2FtZUVuZGVkJywge1xuICAgICAgICAgIHJvb206IHRoaXMucm9vbUlkLFxuICAgICAgICAgIHJlc3VsdDogJ1RJRSAhJ1xuICAgICAgICB9KTsgICAgXG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZGVjbGFyZVdpbm5lciAocmVzdWx0c01lc3NhZ2UpIHtcbiAgICBoaWRlKHRoaXMuJGluZm8pO1xuXG4gICAgdGhpcy5zaG93UmVzdWx0T3ZlclRpbWUocmVzdWx0c01lc3NhZ2UpO1xuXG4gICAgcmV0dXJuIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpO1xuICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSwgNTAwKTtcbiAgfVxuXG4gIGVtaXRBbm90aGVyUGxheWVyIChyZXN1bHQpIHtcbiAgICB0aGlzLnNvY2tldC5lbWl0KCdnYW1lRW5kZWQnLCB7XG4gICAgICByb29tOiB0aGlzLnJvb21JZCxcbiAgICAgIHJlc3VsdFxuICAgIH0pO1xuICB9XG5cbiAgc2hvd1Jlc3VsdE92ZXJUaW1lIChyZXN1bHQpIHtcbiAgICByZXR1cm4gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCAkd2lubmVyUmVzdWx0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndpbm5lcl9fcmVzdWx0Jyk7XG4gICAgICAkd2lubmVyUmVzdWx0LmlubmVyVGV4dCA9IHJlc3VsdDsgXG5cbiAgICAgIGhpZGUodGhpcy4kYm9hcmQpO1xuICAgICAgc2hvdyh0aGlzLiR3aW5uZXIsICdmbGV4Jyk7XG5cbiAgICAgIHRoaXMuJHdpbm5lci5zdHlsZS5tYXJnaW5Cb3R0b20gPSAnMCc7XG4gICAgfSwgNTAwKTtcbiAgfVxuXG4gIHNldEluZm9UZXh0ICh0ZXh0KSB7XG4gICAgdGhpcy4kaW5mby5pbm5lclRleHQgPSB0ZXh0O1xuICB9XG59XG4iLCJpbXBvcnQgR2FtZVNpZGUgZnJvbSAnLi9nYW1lLXNpZGUnO1xuaW1wb3J0IFNvY2tldFBsYXllciBmcm9tICcuL3NvY2tldC1wbGF5ZXInO1xuaW1wb3J0IFNvY2tldEdhbWUgZnJvbSAnLi9zb2NrZXQtZ2FtZSc7XG5pbXBvcnQge2hpZGUsIHNob3csIHJlcGxhY2VQbGF5ZXJTaWRlfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVudHJ5IHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMuJHBsYXlXaXRoSHVtYW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLWNyZWF0ZScpO1xuICAgIHRoaXMuJGJ0bkpvaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLWpvaW4nKTtcbiAgICB0aGlzLiRwbGF5V2l0aENvbXBCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLWNvbXAnKTtcbiAgICB0aGlzLiRlbnRyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeScpO1xuXG4gICAgdGhpcy4kcGxheVdpdGhIdW1hbkJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgdGhpcy4kYnRuSm9pbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgXG4gICAgdGhpcy4kZmlyc3RQbGF5ZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVudHJ5X19pbnB1dC0tZmlyc3QtcGxheWVyJyk7XG4gICAgdGhpcy4kc2Vjb25kUGxheWVyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeV9faW5wdXQtLXNlY29uZC1wbGF5ZXInKTtcbiAgICB0aGlzLiRpbnB1dFJvb21JZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeV9faW5wdXQtLXJvb20taWQnKTtcblxuICAgIC8vIHRoaXMuc29ja2V0ID0gaW8uY29ubmVjdCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwJyk7XG4gICAgdGhpcy5nYW1lID0gbnVsbDtcbiAgICB0aGlzLnBsYXllciA9IG51bGw7XG4gICAgdGhpcy5wbGF5ZXJYID0gJ1gnO1xuICAgIHRoaXMucGxheWVyTyA9ICdPJztcblxuICAgIHRoaXMuaW5pdGlhbGl6ZSgpO1xuICAgIC8vIHRoaXMuaW5pdFNvY2tldEV2ZW50cygpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZSAoKSB7XG4gICAgdGhpcy5wbGF5V2l0aENvbXB1dGVyID0gdGhpcy5wbGF5V2l0aENvbXB1dGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5wbGF5V2l0aEh1bWFuID0gdGhpcy5wbGF5V2l0aEh1bWFuLmJpbmQodGhpcyk7XG4gICAgdGhpcy5qb2luSW5DcmVhdGVkR2FtZSA9IHRoaXMuam9pbkluQ3JlYXRlZEdhbWUuYmluZCh0aGlzKTtcbiAgICBcbiAgICBzaG93KHRoaXMuJGVudHJ5KTtcblxuICAgIHRoaXMuJHBsYXlXaXRoQ29tcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMucGxheVdpdGhDb21wdXRlcik7XG4gICAgdGhpcy4kcGxheVdpdGhIdW1hbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMucGxheVdpdGhIdW1hbik7XG4gICAgdGhpcy4kYnRuSm9pbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuam9pbkluQ3JlYXRlZEdhbWUpO1xuICB9XG5cbiAgcGxheVdpdGhDb21wdXRlciAoKSB7XG4gICAgaGlkZSh0aGlzLiRlbnRyeSk7XG4gICAgdGhpcy4kcGxheVdpdGhDb21wQnRuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5wbGF5V2l0aENvbXB1dGVyKTtcblxuICAgIG5ldyBHYW1lU2lkZShmYWxzZSk7XG4gIH1cblxuICBwbGF5V2l0aEh1bWFuICgpIHtcbiAgICBjb25zdCBuYW1lID0gdGhpcy4kZmlyc3RQbGF5ZXJOYW1lLnZhbHVlIHx8ICdkaXYnO1xuXG4gICAgaWYgKCFuYW1lKSB7XG4gICAgICBhbGVydCgnUGxlYXNlIGVudGVyIHlvdXIgbmFtZS4nKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuc29ja2V0LmVtaXQoJ2NyZWF0ZUdhbWUnLCB7IG5hbWUgfSk7XG4gICAgdGhpcy5wbGF5ZXIgPSBuZXcgU29ja2V0UGxheWVyKG5hbWUsIHRoaXMucGxheWVyWCk7XG5cbiAgICBoaWRlKHRoaXMuJGVudHJ5KTtcbiAgfVxuXG4gIGpvaW5JbkNyZWF0ZWRHYW1lICgpIHtcbiAgICBjb25zdCBuYW1lID0gdGhpcy4kc2Vjb25kUGxheWVyTmFtZS52YWx1ZSB8fCAnZGRmJztcbiAgICBjb25zdCByb29tSUQgPSB0aGlzLiRpbnB1dFJvb21JZC52YWx1ZTtcblxuICAgIGlmICghbmFtZSB8fCAhcm9vbUlEKSB7XG4gICAgICBhbGVydCgnUGxlYXNlIGVudGVyIHlvdXIgbmFtZSBhbmQgZ2FtZSBJRC4nKTtcbiAgICBcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnNvY2tldC5lbWl0KCdqb2luR2FtZScsIHsgbmFtZSwgcm9vbTogcm9vbUlEIH0pO1xuXG4gICAgdGhpcy5wbGF5ZXIgPSBuZXcgU29ja2V0UGxheWVyKG5hbWUsIHRoaXMucGxheWVyTyk7XG4gICAgaGlkZSh0aGlzLiRlbnRyeSk7XG4gIH1cblxuICBpbml0U29ja2V0RXZlbnRzICgpIHtcbiAgICB0aGlzLnNvY2tldC5vbignbmV3R2FtZScsIGRhdGEgPT4ge1xuICAgICAgY29uc3QgaW5mb01lc3NhZ2UgPSBgSGVsbG8sICR7ZGF0YS5uYW1lfS5cbiAgICAgICAgUGxlYXNlIGFzayB5b3VyIGZyaWVuZCB0byBlbnRlciBHYW1lIElEOiAke2RhdGEucm9vbX0uXG4gICAgICAgIFdhaXRpbmcgZm9yIHBsYXllciAyLi4uYDtcblxuICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICByb29tSWQ6IGRhdGEucm9vbSxcbiAgICAgICAgcGxheWVyOiB0aGlzLnBsYXllcixcbiAgICAgICAgc29ja2V0OiB0aGlzLnNvY2tldCxcbiAgICAgICAgaXNHYW1lU3RhcnRlZDogZmFsc2VcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuZ2FtZSA9IG5ldyBTb2NrZXRHYW1lKHBhcmFtcyk7XG4gICAgICB0aGlzLmdhbWUuc2V0SW5mb1RleHQoaW5mb01lc3NhZ2UpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc29ja2V0Lm9uKCdwbGF5ZXIxJywgKCkgPT4ge1xuICAgICAgdGhpcy5nYW1lLnNldEluZm9UZXh0KCdZb3VyIHR1cm4nKTtcbiAgICAgIHRoaXMuZ2FtZS5pc0dhbWVTdGFydGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMucGxheWVyLnNldEN1cnJlbnRUdXJuKHRydWUpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc29ja2V0Lm9uKCdwbGF5ZXIyJywgZGF0YSA9PiB7XG4gICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIHJvb21JZDogZGF0YS5yb29tLFxuICAgICAgICBwbGF5ZXI6IHRoaXMucGxheWVyLFxuICAgICAgICBzb2NrZXQ6IHRoaXMuc29ja2V0LFxuICAgICAgICBpc0dhbWVTdGFydGVkOiB0cnVlXG4gICAgICB9O1xuXG4gICAgICB0aGlzLmdhbWUgPSBuZXcgU29ja2V0R2FtZShwYXJhbXMpO1xuXG4gICAgICB0aGlzLmdhbWUuc2V0SW5mb1RleHQoJ1dhaXRpbmcgZm9yIHRoZSBvcHBvbmVudCcpO1xuICAgICAgdGhpcy5wbGF5ZXIuc2V0Q3VycmVudFR1cm4oZmFsc2UpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc29ja2V0Lm9uKCd0dXJuUGxheWVkJywgZGF0YSA9PiB7XG4gICAgICBjb25zdCBvcHBvbmVudFNpZGUgPSByZXBsYWNlUGxheWVyU2lkZSh0aGlzLnBsYXllci5zaWRlKTtcblxuICAgICAgdGhpcy5nYW1lLm1ha2VNb3ZlKGRhdGEuc3F1YXJlLCBvcHBvbmVudFNpZGUpO1xuICAgICAgdGhpcy5nYW1lLnNldEluZm9UZXh0KCdZb3VyIHR1cm4nKTtcbiAgICAgIHRoaXMucGxheWVyLnNldEN1cnJlbnRUdXJuKHRydWUpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc29ja2V0Lm9uKCdnYW1lRW5kJywgZGF0YSA9PiB7XG4gICAgICB0aGlzLmdhbWUuZGVjbGFyZVdpbm5lcihkYXRhLnJlc3VsdCk7XG4gICAgfSk7XG4gICAgXG4gICAgdGhpcy5zb2NrZXQub24oJ2VycicsIGRhdGEgPT4ge1xuICAgICAgYWxlcnQoZGF0YS5tZXNzYWdlKTtcbiAgICAgIHNob3codGhpcy4kZW50cnkpO1xuICAgIH0pO1xuICB9XG59IiwiZXhwb3J0IGNvbnN0IHJlZ2lzdGVyU2VydmljZVdvcmtlciA9IE5PREVfRU5WID0+IHtcbiAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcbiAgICBpZiAoTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcignL3NlcnZpY2Utd29ya2VyLmpzJyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJy90aWMtdGFjLXRvZS9zZXJ2aWNlLXdvcmtlci5qcycpO1xuICAgIH1cbiAgfVxufTtcbiIsImltcG9ydCBFbnRyeSBmcm9tICcuL2NsYXNzZXMvZW50cnknO1xuaW1wb3J0IHsgcmVnaXN0ZXJTZXJ2aWNlV29ya2VyIH0gZnJvbSAnLi4vc2VydmljZS13b3JrZXIvcmVnaXN0ZXItc2VydmljZS13b3JrZXInO1xuXG5pbXBvcnQgJy4uL3Njc3MvbWFpbi5zY3NzJztcblxucmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHByb2Nlc3MuZW52Lk5PREVfRU5WKTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiBuZXcgRW50cnkoKSk7Il0sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMvR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdE5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3REQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4SUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNySUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")}]);